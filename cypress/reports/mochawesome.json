{
  "stats": {
    "suites": 24,
    "tests": 128,
    "passes": 127,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 128,
    "passPercent": 99.21875,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-04-13T17:03:01.516Z",
    "end": "2025-04-13T17:09:55.131Z",
    "duration": 413615
  },
  "results": [
    {
      "uuid": "450209ae-060d-42f2-aca1-0c481ad57a09",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\Myfirsttest.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\Myfirsttest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c037a03-e635-4d93-8f33-e1f442e0b259",
          "title": "My First Test",
          "fullFile": "cypress\\e2e\\1-getting-started\\Myfirsttest.cy.js",
          "file": "cypress\\e2e\\1-getting-started\\Myfirsttest.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify title-positve",
              "fullTitle": "My First Test verify title-positve",
              "timedOut": null,
              "duration": 3829,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://opensource-demo.orangehrmlive.com/\");\ncy.title().should('eq', 'OrangeHRM');",
              "err": {},
              "uuid": "78b1234a-41e7-4096-a7d7-4c15c91f2873",
              "parentUUID": "6c037a03-e635-4d93-8f33-e1f442e0b259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify title-Nagive test",
              "fullTitle": "My First Test verify title-Nagive test",
              "timedOut": null,
              "duration": 90088,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://opensource-demo.orangehrmlive.com/\");\ncy.title().should('eq', 'OrangeHRM123');",
              "err": {
                "message": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.",
                "estack": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n    at https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:136032:73\n    at tryCatcher (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1777:23)\n    at https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:4156:41\n    at tryCatcher (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2256:14)",
                "diff": null
              },
              "uuid": "4168b886-9a94-4077-917d-0f27e82f7787",
              "parentUUID": "6c037a03-e635-4d93-8f33-e1f442e0b259",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78b1234a-41e7-4096-a7d7-4c15c91f2873"
          ],
          "failures": [
            "4168b886-9a94-4077-917d-0f27e82f7787"
          ],
          "pending": [],
          "skipped": [],
          "duration": 93917,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1031492d-e2b3-4df9-be47-1982b5af9845",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\Test.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\Test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53a9282b-9d4b-45d4-a6a9-eed8219d224d",
          "title": "Launch the talent",
          "fullFile": "cypress\\e2e\\1-getting-started\\Test.cy.js",
          "file": "cypress\\e2e\\1-getting-started\\Test.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test the entire talent",
              "fullTitle": "Launch the talent Test the entire talent",
              "timedOut": null,
              "duration": 3144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.on('uncaught:exception', (err, runnable) => {\n  return false; // Ignore React error 418\n});\ncy.visit(\"https://talent.woyage.ai/\", {\n  timeout: 120000\n});",
              "err": {},
              "uuid": "33fd80ff-4cf1-42c2-8020-cf34e8e1081a",
              "parentUUID": "53a9282b-9d4b-45d4-a6a9-eed8219d224d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33fd80ff-4cf1-42c2-8020-cf34e8e1081a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3144,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5dc81151-f9a1-4b7e-bc43-9d69af0ab09c",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\sampletest.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\sampletest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e380923-57ef-4f20-96f4-61c3aaa54d27",
          "title": "My Sample Test",
          "fullFile": "cypress\\e2e\\1-getting-started\\sampletest.cy.js",
          "file": "cypress\\e2e\\1-getting-started\\sampletest.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visits the example page",
              "fullTitle": "My Sample Test Visits the example page",
              "timedOut": null,
              "duration": 1033,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.contains('Kitchen Sink');",
              "err": {},
              "uuid": "34ec6576-e0a3-40a6-acd3-f57a4ad69ac0",
              "parentUUID": "7e380923-57ef-4f20-96f4-61c3aaa54d27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34ec6576-e0a3-40a6-acd3-f57a4ad69ac0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1033,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "984ace03-70db-475f-8e6e-bbfbfcd19437",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50c09888-e79f-4e60-8a14-e95a0fbcf3a3",
          "title": "example to-do app",
          "fullFile": "cypress\\e2e\\1-getting-started\\todo.cy.js",
          "file": "cypress\\e2e\\1-getting-started\\todo.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 925,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "d359778c-d734-49e8-b0a2-0c49bd197d86",
              "parentUUID": "50c09888-e79f-4e60-8a14-e95a0fbcf3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat';\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`);\n// Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "947755fc-b61f-4b37-8663-98aecb5360d1",
              "parentUUID": "50c09888-e79f-4e60-8a14-e95a0fbcf3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check();\n// Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "4f1848d1-4d88-4b88-86b7-096156a23f92",
              "parentUUID": "50c09888-e79f-4e60-8a14-e95a0fbcf3a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "92d60740-19a7-46d2-bd0b-94e581dfd34d",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 527,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click();\n// After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog');\n// For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "fb7fb609-e10a-4fb0-b70d-68f9cc7e6901",
                  "parentUUID": "92d60740-19a7-46d2-bd0b-94e581dfd34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 490,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "10c1fe39-6528-44ef-ba14-d7fbda505347",
                  "parentUUID": "92d60740-19a7-46d2-bd0b-94e581dfd34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 452,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click();\n// Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill');\n// Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "dd475659-686a-4676-8850-f7f233bae59d",
                  "parentUUID": "92d60740-19a7-46d2-bd0b-94e581dfd34d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb7fb609-e10a-4fb0-b70d-68f9cc7e6901",
                "10c1fe39-6528-44ef-ba14-d7fbda505347",
                "dd475659-686a-4676-8850-f7f233bae59d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1469,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "d359778c-d734-49e8-b0a2-0c49bd197d86",
            "947755fc-b61f-4b37-8663-98aecb5360d1",
            "4f1848d1-4d88-4b88-86b7-096156a23f92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1970,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1866c13d-c41c-4de0-8db4-26f1441a7f29",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
          "title": "Actions",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4989,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com');\ncy.get('.action-email').should('have.value', 'fake@email.com');\n// .type() with special character sequences\ncy.get('.action-email').type('{leftarrow}{rightarrow}{uparrow}{downarrow}');\ncy.get('.action-email').type('{del}{selectall}{backspace}');\n// .type() with key modifiers\ncy.get('.action-email').type('{alt}{option}'); //these are equivalent\ncy.get('.action-email').type('{ctrl}{control}'); //these are equivalent\ncy.get('.action-email').type('{meta}{command}{cmd}'); //these are equivalent\ncy.get('.action-email').type('{shift}');\n// Delay each keypress by 0.1 sec\ncy.get('.action-email').type('slow.typing@email.com', {\n  delay: 100\n});\ncy.get('.action-email').should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n});\ncy.get('.action-disabled').should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "7c290359-527d-4ff5-ba16-21e51e7f8b50",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus();\ncy.get('.action-focus').should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "7f23c295-1307-4034-8e1a-b2c691e87a01",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 747,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur');\ncy.get('.action-blur').blur();\ncy.get('.action-blur').should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "b4ade27d-4789-40a7-9c28-38e4a4109b42",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 815,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text');\ncy.get('.action-clear').should('have.value', 'Clear this text');\ncy.get('.action-clear').clear();\ncy.get('.action-clear').should('have.value', '');",
              "err": {},
              "uuid": "981f8dd2-8f66-47d0-a7bc-42028adac843",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 614,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit();\ncy.get('.action-form').next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "3a7b4b6f-dd08-424d-b3ef-eeff6b455619",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2444,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas');\ncy.get('#action-canvas').click(80, 75); // click 80px on x coord and 75px on y coord\ncy.get('#action-canvas').click(170, 75);\ncy.get('#action-canvas').click(80, 165);\ncy.get('#action-canvas').click(100, 185);\ncy.get('#action-canvas').click(125, 190);\ncy.get('#action-canvas').click(150, 185);\ncy.get('#action-canvas').click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "1aa89616-343e-4c27-a9d1-67a39f059062",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 425,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick();\ncy.get('.action-div').should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "208888df-b842-4586-b081-d283dcd7f2b2",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick();\ncy.get('.rightclick-action-div').should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "9c735342-90dd-4090-a7da-29ab5a709bab",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1225,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check();\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check();\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1');\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']);\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n});\ncy.get('.action-checkboxes [disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n});\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');",
              "err": {},
              "uuid": "3b8f87af-6c3c-493b-8881-0e30fdc6d733",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck();\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1');\ncy.get('.action-check [type=\"checkbox\"]').uncheck('checkbox1');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"]').uncheck(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox3\"]').should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n});\ncy.get('.action-check [disabled]').should('not.be.checked');",
              "err": {},
              "uuid": "284f544e-a0a7-4d96-b376-2cf0bc5b0be5",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']);\ncy.get('.action-select-multiple')\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas');\ncy.get('.action-select')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']);\ncy.get('.action-select-multiple').invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "6995f52b-40a7-4181-a60c-a00af7a4795c",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView();\ncy.get('#scroll-horizontal button').should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView();\ncy.get('#scroll-vertical button').should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView();\ncy.get('#scroll-both button').should('be.visible');",
              "err": {},
              "uuid": "33785e13-ffd4-498f-9aa0-6a1deeaba9b4",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25);\ncy.get('.trigger-input-range').trigger('change');\ncy.get('.trigger-input-range').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "44498ecb-d6ed-42e3-8e18-9f4f6209979c",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 3320,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "b7b8b9cd-24b2-46ab-b39b-d76d05cef9f4",
              "parentUUID": "72b6cdef-2471-48a4-bfd2-6a36d233d540",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c290359-527d-4ff5-ba16-21e51e7f8b50",
            "7f23c295-1307-4034-8e1a-b2c691e87a01",
            "b4ade27d-4789-40a7-9c28-38e4a4109b42",
            "981f8dd2-8f66-47d0-a7bc-42028adac843",
            "3a7b4b6f-dd08-424d-b3ef-eeff6b455619",
            "1aa89616-343e-4c27-a9d1-67a39f059062",
            "208888df-b842-4586-b081-d283dcd7f2b2",
            "9c735342-90dd-4090-a7da-29ab5a709bab",
            "3b8f87af-6c3c-493b-8881-0e30fdc6d733",
            "284f544e-a0a7-4d96-b376-2cf0bc5b0be5",
            "6995f52b-40a7-4181-a60c-a00af7a4795c",
            "33785e13-ffd4-498f-9aa0-6a1deeaba9b4",
            "44498ecb-d6ed-42e3-8e18-9f4f6209979c",
            "b7b8b9cd-24b2-46ab-b39b-d76d05cef9f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18392,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "142d9e61-e62e-4af4-9913-1ff6f57fe1f5",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "41e8f636-7e6f-4267-a2f0-0a4e2c59bf70",
          "title": "Aliasing",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 877,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "32a57d6d-9e2d-45e2-899f-1101dd250f27",
              "parentUUID": "41e8f636-7e6f-4267-a2f0-0a4e2c59bf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "93c872cb-6686-4cbe-973e-6cdeff8a63f3",
              "parentUUID": "41e8f636-7e6f-4267-a2f0-0a4e2c59bf70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32a57d6d-9e2d-45e2-899f-1101dd250f27",
            "93c872cb-6686-4cbe-973e-6cdeff8a63f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2794,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "27d67e31-8f3d-4b6e-bd91-67f8b435abd4",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06f23daa-725a-4e73-bc70-7422ccc5a26c",
          "title": "Assertions",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e2ce2738-87c7-4fe8-86ea-fbe83499a1fb",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 849,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first()\n// checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content')\n// chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td')\n// to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last')\n// finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "e0cc1946-0ea3-4e10-837c-23236cc7d155",
                  "parentUUID": "e2ce2738-87c7-4fe8-86ea-fbe83499a1fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 253,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "66ed39d2-464d-43a3-bc20-e141509ba648",
                  "parentUUID": "e2ce2738-87c7-4fe8-86ea-fbe83499a1fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0cc1946-0ea3-4e10-837c-23236cc7d155",
                "66ed39d2-464d-43a3-bc20-e141509ba648"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1102,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "710222df-2364-4ed0-81e8-8a8b5804f502",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 238,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n});\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "3f57531b-a52c-4fe3-b732-9096cdfe4507",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 302,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get();\n  // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n  // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "7f530098-3761-4aa7-9133-3815506052ae",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 244,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div')\n// .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n})\n// .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "e972188c-2d66-44e6-8b0a-f5226ddcabcb",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 235,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "a2423a83-68ce-4f7b-8511-c709b61fe7b8",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 263,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "4c8a112f-8060-4362-9fd9-c8858bd010d1",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 223,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "c72528ec-d94e-4058-b52c-7548783527c0",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1755,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "d3eacbec-a0b0-47c5-9784-f2c2650939d7",
                  "parentUUID": "710222df-2364-4ed0-81e8-8a8b5804f502",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f57531b-a52c-4fe3-b732-9096cdfe4507",
                "7f530098-3761-4aa7-9133-3815506052ae",
                "e972188c-2d66-44e6-8b0a-f5226ddcabcb",
                "a2423a83-68ce-4f7b-8511-c709b61fe7b8",
                "4c8a112f-8060-4362-9fd9-c8858bd010d1",
                "c72528ec-d94e-4058-b52c-7548783527c0",
                "d3eacbec-a0b0-47c5-9784-f2c2650939d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3260,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "16e974a6-1ba0-43a5-9dc5-48186229a28b",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96e0508c-31a3-45ee-9105-7c2aad1f0491",
          "title": "Connectors",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "027883d2-9e83-4cb2-b0d0-6e07b40a29dc",
              "parentUUID": "96e0508c-31a3-45ee-9105-7c2aad1f0491",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n// calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "6ab252be-9ba1-4edc-b064-caa70664d702",
              "parentUUID": "96e0508c-31a3-45ee-9105-7c2aad1f0491",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\ncy.get('.connectors-div').should('be.hidden');\n// https://on.cypress.io/invoke\n// call the jquery method 'show' on the 'div.container'\ncy.get('.connectors-div').invoke('show');\ncy.get('.connectors-div').should('be.visible');",
              "err": {},
              "uuid": "462f653c-bd25-4d26-8d3c-89d6c9bdf43e",
              "parentUUID": "96e0508c-31a3-45ee-9105-7c2aad1f0491",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "ff2c7194-f370-4281-9933-cf04d071bd17",
              "parentUUID": "96e0508c-31a3-45ee-9105-7c2aad1f0491",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5390d50c-32e9-4f01-83af-b85b1bce7a35",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 258,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "8a30b91e-8dbf-49f1-8a10-f401ed6935e4",
                  "parentUUID": "5390d50c-32e9-4f01-83af-b85b1bce7a35",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 230,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "cd5ba897-7974-4b1f-be14-4b6336321c93",
                  "parentUUID": "5390d50c-32e9-4f01-83af-b85b1bce7a35",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 248,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "3e9f7bc8-3f95-4c3b-83fb-0e545402c663",
                  "parentUUID": "5390d50c-32e9-4f01-83af-b85b1bce7a35",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 233,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "0f5a755c-d26d-4fc5-8c2e-0971877d0f99",
                  "parentUUID": "5390d50c-32e9-4f01-83af-b85b1bce7a35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a30b91e-8dbf-49f1-8a10-f401ed6935e4",
                "cd5ba897-7974-4b1f-be14-4b6336321c93",
                "3e9f7bc8-3f95-4c3b-83fb-0e545402c663",
                "0f5a755c-d26d-4fc5-8c2e-0971877d0f99"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 969,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "027883d2-9e83-4cb2-b0d0-6e07b40a29dc",
            "6ab252be-9ba1-4edc-b064-caa70664d702",
            "462f653c-bd25-4d26-8d3c-89d6c9bdf43e",
            "ff2c7194-f370-4281-9933-cf04d071bd17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1503,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4ed4ffa7-28f4-4c8c-b6bb-4dc18de571ec",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
          "title": "Cookies",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 859,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "b31a1bdf-399d-4146-b0ed-3bbf043845a3",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies for the current domain",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies for the current domain",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "4e9d9554-c6a3-4a62-82d0-4f8a1c10bdf1",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllCookies() - get all browser cookies",
              "fullTitle": "Cookies cy.getAllCookies() - get all browser cookies",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\n// cy.getAllCookies() yields an array of cookies\ncy.getAllCookies().should('have.length', 2).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'key');\n  expect(cookies[0]).to.have.property('value', 'value');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n  expect(cookies[1]).to.have.property('name', 'key');\n  expect(cookies[1]).to.have.property('value', 'value');\n  expect(cookies[1]).to.have.property('httpOnly', false);\n  expect(cookies[1]).to.have.property('secure', false);\n  expect(cookies[1]).to.have.property('domain', '.example.com');\n  expect(cookies[1]).to.have.property('path');\n});",
              "err": {},
              "uuid": "70c1ffb8-1e7b-47d3-9d5c-15d4e1b72ae8",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "971c8a8f-f6c0-4176-817a-299ccf77c821",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "0afc00ff-a62f-4b08-bbcf-a23b3e3fdf6b",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies for the current domain",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies for the current domain",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "a909aa91-bbf7-4592-80ae-2fe7bf9e7a33",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllCookies() - clear all browser cookies",
              "fullTitle": "Cookies cy.clearAllCookies() - clear all browser cookies",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\ncy.getAllCookies().should('have.length', 2);\n// cy.clearAllCookies() yields null\ncy.clearAllCookies();\ncy.getAllCookies().should('be.empty');",
              "err": {},
              "uuid": "7bedf7d3-9f35-4ed4-b06c-966de64b680a",
              "parentUUID": "e4e33ada-40f6-4e76-81f5-32e7a348f629",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b31a1bdf-399d-4146-b0ed-3bbf043845a3",
            "4e9d9554-c6a3-4a62-82d0-4f8a1c10bdf1",
            "70c1ffb8-1e7b-47d3-9d5c-15d4e1b72ae8",
            "971c8a8f-f6c0-4176-817a-299ccf77c821",
            "0afc00ff-a62f-4b08-bbcf-a23b3e3fdf6b",
            "a909aa91-bbf7-4592-80ae-2fe7bf9e7a33",
            "7bedf7d3-9f35-4ed4-b06c-966de64b680a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "85186d57-7d87-4d81-ba1f-6b4fa14e0a4f",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3a22223-3973-406e-beeb-ba9251a7462f",
          "title": "Cypress APIs",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9822f4f7-b3fc-4042-ad89-e84675dc6f18",
              "title": "Cypress.Commands",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".add() - create a custom command",
                  "fullTitle": "Cypress APIs Cypress.Commands .add() - create a custom command",
                  "timedOut": null,
                  "duration": 763,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
                  "err": {},
                  "uuid": "dd6cee5d-ccad-418a-8a91-6f86e2f0703d",
                  "parentUUID": "9822f4f7-b3fc-4042-ad89-e84675dc6f18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd6cee5d-ccad-418a-8a91-6f86e2f0703d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 763,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4da7589b-8bde-4fef-b10a-d1f961d79a87",
              "title": "Cypress.Cookies",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".debug() - enable or disable debugging",
                  "fullTitle": "Cypress APIs Cypress.Cookies .debug() - enable or disable debugging",
                  "timedOut": null,
                  "duration": 289,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
                  "err": {},
                  "uuid": "bbbd38de-b51c-4f19-a965-d45a0232b37e",
                  "parentUUID": "4da7589b-8bde-4fef-b10a-d1f961d79a87",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbbd38de-b51c-4f19-a965-d45a0232b37e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 289,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b1b541dd-bc42-466a-a690-ed7926fccbd6",
              "title": "Cypress.arch",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get CPU architecture name of underlying OS",
                  "fullTitle": "Cypress APIs Cypress.arch Get CPU architecture name of underlying OS",
                  "timedOut": null,
                  "duration": 268,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
                  "err": {},
                  "uuid": "199647c9-9b22-4df4-9b13-64d7952db2c4",
                  "parentUUID": "b1b541dd-bc42-466a-a690-ed7926fccbd6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "199647c9-9b22-4df4-9b13-64d7952db2c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 268,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f9ac59bc-4071-4205-976d-7f370adb2543",
              "title": "Cypress.config()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get and set configuration options",
                  "fullTitle": "Cypress APIs Cypress.config() Get and set configuration options",
                  "timedOut": null,
                  "duration": 292,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
                  "err": {},
                  "uuid": "4cb2fc41-ef42-486f-af68-5f85eff2275c",
                  "parentUUID": "f9ac59bc-4071-4205-976d-7f370adb2543",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4cb2fc41-ef42-486f-af68-5f85eff2275c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 292,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b8a56189-ed1b-4816-bd3b-c3ca867ab72c",
              "title": "Cypress.dom",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".isHidden() - determine if a DOM element is hidden",
                  "fullTitle": "Cypress APIs Cypress.dom .isHidden() - determine if a DOM element is hidden",
                  "timedOut": null,
                  "duration": 221,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
                  "err": {},
                  "uuid": "88189cc1-d4ff-4a92-b854-fa43ee0a2031",
                  "parentUUID": "b8a56189-ed1b-4816-bd3b-c3ca867ab72c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "88189cc1-d4ff-4a92-b854-fa43ee0a2031"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 221,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3c50ef02-4734-4145-b9bf-e1f3defda10f",
              "title": "Cypress.env()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get environment variables",
                  "fullTitle": "Cypress APIs Cypress.env() Get environment variables",
                  "timedOut": null,
                  "duration": 275,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
                  "err": {},
                  "uuid": "7b0853d0-a33b-4354-a255-410e09516b10",
                  "parentUUID": "3c50ef02-4734-4145-b9bf-e1f3defda10f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b0853d0-a33b-4354-a255-410e09516b10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 275,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b280b8d7-4ab3-4b59-ad0b-c10b13532a41",
              "title": "Cypress.log",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Control what is printed to the Command Log",
                  "fullTitle": "Cypress APIs Cypress.log Control what is printed to the Command Log",
                  "timedOut": null,
                  "duration": 232,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/cypress-log",
                  "err": {},
                  "uuid": "0038f843-478f-405e-a8b5-8fa51f97c436",
                  "parentUUID": "b280b8d7-4ab3-4b59-ad0b-c10b13532a41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0038f843-478f-405e-a8b5-8fa51f97c436"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 232,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "69dcb246-c300-4af0-868c-cf86a47b3749",
              "title": "Cypress.platform",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get underlying OS name",
                  "fullTitle": "Cypress APIs Cypress.platform Get underlying OS name",
                  "timedOut": null,
                  "duration": 239,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
                  "err": {},
                  "uuid": "1e6571ba-2f7e-41f6-8bef-a1077d1fe22c",
                  "parentUUID": "69dcb246-c300-4af0-868c-cf86a47b3749",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e6571ba-2f7e-41f6-8bef-a1077d1fe22c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 239,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "74fa973a-5aed-4822-9112-6c253eb6231c",
              "title": "Cypress.version",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current version of Cypress being run",
                  "fullTitle": "Cypress APIs Cypress.version Get current version of Cypress being run",
                  "timedOut": null,
                  "duration": 253,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
                  "err": {},
                  "uuid": "277c42d6-f87d-4b00-b8fc-4e45ff784b43",
                  "parentUUID": "74fa973a-5aed-4822-9112-6c253eb6231c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "277c42d6-f87d-4b00-b8fc-4e45ff784b43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 253,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f6300855-ef2d-4c71-8d6f-d8eb20e686b0",
              "title": "Cypress.spec",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current spec information",
                  "fullTitle": "Cypress APIs Cypress.spec Get current spec information",
                  "timedOut": null,
                  "duration": 314,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
                  "err": {},
                  "uuid": "6aace237-292b-49a4-9554-d6424a5f6d89",
                  "parentUUID": "f6300855-ef2d-4c71-8d6f-d8eb20e686b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6aace237-292b-49a4-9554-d6424a5f6d89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5bf2d684-65fe-49c5-8d64-1ea28f1eaa27",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4117bf5c-d54a-47bf-81b3-54e7cb697de3",
          "title": "Files",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 824,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "84d60075-2939-4a3c-baa4-0dab17ecce78",
              "parentUUID": "4117bf5c-d54a-47bf-81b3-54e7cb697de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "7fb6c355-94e3-45b1-b3e6-49211cbe0765",
              "parentUUID": "4117bf5c-d54a-47bf-81b3-54e7cb697de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(Cypress.config('configFile')).then(config => {\n  expect(config).to.be.an('string');\n});",
              "err": {},
              "uuid": "3f17d3ca-b9a9-428b-9d4f-22ea02cc2de4",
              "parentUUID": "4117bf5c-d54a-47bf-81b3-54e7cb697de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 695,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "dcb7bca4-7919-48de-b7a2-49765ca8d31a",
              "parentUUID": "4117bf5c-d54a-47bf-81b3-54e7cb697de3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84d60075-2939-4a3c-baa4-0dab17ecce78",
            "7fb6c355-94e3-45b1-b3e6-49211cbe0765",
            "3f17d3ca-b9a9-428b-9d4f-22ea02cc2de4",
            "dcb7bca4-7919-48de-b7a2-49765ca8d31a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2023,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a5771dcd-c2f0-4430-9999-e79df05ac0b0",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09c62500-2bd1-4aca-b3be-c6804efeb566",
          "title": "Location",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 818,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "934e718e-fd19-42d9-8aa5-47f225dd8e11",
              "parentUUID": "09c62500-2bd1-4aca-b3be-c6804efeb566",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "ecd5a752-7fd7-46fa-9316-23d18ea965bb",
              "parentUUID": "09c62500-2bd1-4aca-b3be-c6804efeb566",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "e86b4b0d-6928-410a-9314-28bce29b6193",
              "parentUUID": "09c62500-2bd1-4aca-b3be-c6804efeb566",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "934e718e-fd19-42d9-8aa5-47f225dd8e11",
            "ecd5a752-7fd7-46fa-9316-23d18ea965bb",
            "e86b4b0d-6928-410a-9314-28bce29b6193"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9e02b7cd-9f41-4164-b0df-32639e6c7655",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d44ef300-2b99-41a7-ab33-6912ed725d46",
          "title": "Misc",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 1046,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "6a6bb1f3-7c77-40eb-b2b8-e0ff5169d538",
              "parentUUID": "d44ef300-2b99-41a7-ab33-6912ed725d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 526,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "58b8ea31-fed8-4f09-aa96-5032a8ddfcb1",
              "parentUUID": "d44ef300-2b99-41a7-ab33-6912ed725d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "8d2a3bb1-b640-4581-99cd-d7388704eb21",
              "parentUUID": "d44ef300-2b99-41a7-ab33-6912ed725d46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "439a9428-7397-4557-b8b1-63adb611e668",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 2049,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n    {\n        \"title\": \"Screenshot (my-image)\",\n        \"value\": \"screenshots\\\\2-advanced-examples\\\\misc.cy.js/my-image.png\"\n    }\n]",
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "5b6d23dd-7ef3-4d3a-98de-fceb1d10b763",
                  "parentUUID": "439a9428-7397-4557-b8b1-63adb611e668",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 272,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "d98ce296-c26f-4a17-b402-a551e6d287e6",
                  "parentUUID": "439a9428-7397-4557-b8b1-63adb611e668",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5b6d23dd-7ef3-4d3a-98de-fceb1d10b763",
                "d98ce296-c26f-4a17-b402-a551e6d287e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2321,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "6a6bb1f3-7c77-40eb-b2b8-e0ff5169d538",
            "58b8ea31-fed8-4f09-aa96-5032a8ddfcb1",
            "8d2a3bb1-b640-4581-99cd-d7388704eb21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1820,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aa1b0221-6729-4f55-9529-f01056e0cbfc",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de1f1ba9-e105-4caf-bddb-3277853bce41",
          "title": "Navigation",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 2294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "fcb8dc41-2222-4a7a-b5ee-e1a44ffb5413",
              "parentUUID": "de1f1ba9-e105-4caf-bddb-3277853bce41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 984,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "744e195c-99d9-41a7-8d68-6f51200c6bd5",
              "parentUUID": "de1f1ba9-e105-4caf-bddb-3277853bce41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 849,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "5506ce63-b33e-4c0a-955e-43cf2399b5b3",
              "parentUUID": "de1f1ba9-e105-4caf-bddb-3277853bce41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcb8dc41-2222-4a7a-b5ee-e1a44ffb5413",
            "744e195c-99d9-41a7-8d68-6f51200c6bd5",
            "5506ce63-b33e-4c0a-955e-43cf2399b5b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4127,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f6a7a31-1089-4685-a57c-eef3a4c5a644",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
          "title": "Network Requests",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1515,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200);\n  // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "e8d3875a-460a-45a1-a060-4f846a8cee37",
              "parentUUID": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 933,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "ead25096-0254-44ef-be9a-e8f2fda26bd5",
              "parentUUID": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "bdc5c2ac-dbd7-4195-813d-d5136b49ae16",
              "parentUUID": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number');\n  // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n})\n// note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  });\n  // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100);\n  // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "cd110a7c-7265-420a-9ad7-e7965ebd9810",
              "parentUUID": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 1319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "47235f94-42fb-4bb8-a7a8-84efcbef225f",
              "parentUUID": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1877,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist';\n// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);\n// Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n});\n// Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "7488340d-e459-4257-b93a-e8d3e1656ae9",
              "parentUUID": "0f921dfa-ace2-4e63-b8e2-3f20dda3669b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8d3875a-460a-45a1-a060-4f846a8cee37",
            "ead25096-0254-44ef-be9a-e8f2fda26bd5",
            "bdc5c2ac-dbd7-4195-813d-d5136b49ae16",
            "cd110a7c-7265-420a-9ad7-e7965ebd9810",
            "47235f94-42fb-4bb8-a7a8-84efcbef225f",
            "7488340d-e459-4257-b93a-e8d3e1656ae9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fe53ba8c-60b1-40c5-80f6-9313480a30bc",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "118fea77-e0b7-4c11-9dca-4e5c86032784",
          "title": "Querying",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 795,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "59c4bbdf-d1d1-43c0-8df5-78f07d267936",
              "parentUUID": "118fea77-e0b7-4c11-9dca-4e5c86032784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "b494c9e5-f8bf-400f-a8dd-5d624019b031",
              "parentUUID": "118fea77-e0b7-4c11-9dca-4e5c86032784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "6aa6c018-599e-438d-b8ea-03956eb4dc72",
              "parentUUID": "118fea77-e0b7-4c11-9dca-4e5c86032784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "416e2ccc-058a-40fa-a3f0-0ec54e34e05f",
              "parentUUID": "118fea77-e0b7-4c11-9dca-4e5c86032784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 864,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click();\n  // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click();\n  // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click();\n  // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click();\n  // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click();\n  // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click();\n  // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "bf67916a-46c7-4110-be4d-caabf29abd4c",
              "parentUUID": "118fea77-e0b7-4c11-9dca-4e5c86032784",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59c4bbdf-d1d1-43c0-8df5-78f07d267936",
            "b494c9e5-f8bf-400f-a8dd-5d624019b031",
            "6aa6c018-599e-438d-b8ea-03956eb4dc72",
            "416e2ccc-058a-40fa-a3f0-0ec54e34e05f",
            "bf67916a-46c7-4110-be4d-caabf29abd4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2469,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd60c0b7-85a5-49f1-b150-ddac526d0082",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 934,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "174c95ef-82c0-40e5-88d3-2ba4c2bb28af",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2562,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "70627cb4-7899-4c2a-89d4-2e952d5f7ddd",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "82dc7b5b-e70f-4004-a6f7-0be4d9fc75cf",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so it's always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click();\ncy.get('#clock-div').should('have.text', '1489449600');",
              "err": {},
              "uuid": "a8b663b5-0275-4c22-8a8f-d5ce899a70aa",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so it's always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click();\ncy.get('#tick-div').should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click();\ncy.get('#tick-div').should('have.text', '1489449610');",
              "err": {},
              "uuid": "38bbde33-c8de-4a34-b9b7-505d83ec3692",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice;\n// non-matched calls goes the actual method\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "e2e5eccb-cd30-458b-9239-e663b097623b",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5);\n// if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3);\n// let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number);\n// alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3));\n// match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3);\n// match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is even\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0;\n// expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isLessThan = limit => x => x < limit;\n// you can combine several matchers using \"and\", \"or\"\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3)));\n// matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3));\n// you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "d5bbd7f3-d573-4cea-8095-b06302b6f1d5",
              "parentUUID": "0dc24363-6486-4281-8df5-f7ad8f7fd77d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "174c95ef-82c0-40e5-88d3-2ba4c2bb28af",
            "70627cb4-7899-4c2a-89d4-2e952d5f7ddd",
            "82dc7b5b-e70f-4004-a6f7-0be4d9fc75cf",
            "a8b663b5-0275-4c22-8a8f-d5ce899a70aa",
            "38bbde33-c8de-4a34-b9b7-505d83ec3692",
            "e2e5eccb-cd30-458b-9239-e663b097623b",
            "d5bbd7f3-d573-4cea-8095-b06302b6f1d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7a5bf9df-e053-42de-b0e1-b01202561c20",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4e3cae9-a1cc-404f-b792-90c7b0d3b655",
          "title": "Local Storage / Session Storage",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in localStorage for the current origin",
              "fullTitle": "Local Storage / Session Storage cy.clearLocalStorage() - clear all data in localStorage for the current origin",
              "timedOut": null,
              "duration": 1002,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click();\ncy.get('.ls-btn').should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage();\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.be.null;\n  expect(localStorage.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click();\ncy.get('.ls-btn').should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear key matching string in localStorage\ncy.clearLocalStorage('prop1');\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click();\ncy.get('.ls-btn').should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in localStorage\ncy.clearLocalStorage(/prop1|2/);\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.be.null;\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "fac6ee57-2458-41a2-8392-50a2571a04b2",
              "parentUUID": "e4e3cae9-a1cc-404f-b792-90c7b0d3b655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllLocalStorage() - get all data in localStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.getAllLocalStorage() - get all data in localStorage for all origins",
              "timedOut": null,
              "duration": 447,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getalllocalstorage\ncy.get('.ls-btn').click();\n// getAllLocalStorage() yields a map of origins to localStorage values\ncy.getAllLocalStorage().should(storageMap => {\n  expect(storageMap).to.deep.equal({\n    // other origins will also be present if localStorage is set on them\n    'https://example.cypress.io': {\n      'prop1': 'red',\n      'prop2': 'blue',\n      'prop3': 'magenta'\n    }\n  });\n});",
              "err": {},
              "uuid": "5683599e-517d-4447-af3a-12ced3657d2c",
              "parentUUID": "e4e3cae9-a1cc-404f-b792-90c7b0d3b655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearalllocalstorage\ncy.get('.ls-btn').click();\n// clearAllLocalStorage() yields null\ncy.clearAllLocalStorage();\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.be.null;\n  expect(localStorage.getItem('prop3')).to.be.null;\n});",
              "err": {},
              "uuid": "635efefd-0cc8-4107-a2eb-b71b637cfdd8",
              "parentUUID": "e4e3cae9-a1cc-404f-b792-90c7b0d3b655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
              "timedOut": null,
              "duration": 490,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallsessionstorage\ncy.get('.ls-btn').click();\n// getAllSessionStorage() yields a map of origins to sessionStorage values\ncy.getAllSessionStorage().should(storageMap => {\n  expect(storageMap).to.deep.equal({\n    // other origins will also be present if sessionStorage is set on them\n    'https://example.cypress.io': {\n      'prop4': 'cyan',\n      'prop5': 'yellow',\n      'prop6': 'black'\n    }\n  });\n});",
              "err": {},
              "uuid": "3c4fadf8-bc2b-44fd-b68c-e928d793dae5",
              "parentUUID": "e4e3cae9-a1cc-404f-b792-90c7b0d3b655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallsessionstorage\ncy.get('.ls-btn').click();\n// clearAllSessionStorage() yields null\ncy.clearAllSessionStorage();\ncy.getAllSessionStorage().should(() => {\n  expect(sessionStorage.getItem('prop4')).to.be.null;\n  expect(sessionStorage.getItem('prop5')).to.be.null;\n  expect(sessionStorage.getItem('prop6')).to.be.null;\n});",
              "err": {},
              "uuid": "4a6bf8a3-d2e3-41f6-bfde-fca65bb47473",
              "parentUUID": "e4e3cae9-a1cc-404f-b792-90c7b0d3b655",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fac6ee57-2458-41a2-8392-50a2571a04b2",
            "5683599e-517d-4447-af3a-12ced3657d2c",
            "635efefd-0cc8-4107-a2eb-b71b637cfdd8",
            "3c4fadf8-bc2b-44fd-b68c-e928d793dae5",
            "4a6bf8a3-d2e3-41f6-bfde-fca65bb47473"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2888,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "98ef74a3-426f-464a-8704-788b3a7bb0fb",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4288a531-407a-4d5d-8607-b020b547d1e3",
          "title": "Traversal",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 735,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "50a3d4b5-1188-4806-86a6-44bad1f57f8a",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "83700746-7673-4a3e-b8fc-14ec8745f846",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "0edecc97-504e-4394-9b38-71931544bf0c",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "0607179d-0c94-4765-ab49-b49d7b34babc",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "227af607-2b63-4b6d-87cf-01a9ce97f5f3",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "df7b1d3c-1e7d-44f4-a03d-4a35232a812c",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "b53cf5b4-fc0f-4f75-9220-a47163f60cb8",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "312d8442-b219-42be-aae2-b6b6e82f748e",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "f598dd5a-2f11-4552-be55-a98f0615ba01",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "336cb246-78f9-4cc6-99ef-3f50d83ff577",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "bde50ce1-7f98-4d71-9a01-b8b997dfb7f0",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "93c0393d-fcff-4735-bc2a-9422a21df202",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "634c60ca-71d5-4d0f-a5dc-3b2a63b0e726",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "5a724bc5-595e-4fd8-8c2b-12f57b7505eb",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "f1da4a06-f3bf-4582-8c26-5caaa91f81b6",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "55a8b0ef-e8f8-490e-8281-4286f2bd623e",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "f9b88181-3b97-4fce-8619-a03ab08db954",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "de823d00-a5f0-491d-b475-bf2df7475e5d",
              "parentUUID": "4288a531-407a-4d5d-8607-b020b547d1e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50a3d4b5-1188-4806-86a6-44bad1f57f8a",
            "83700746-7673-4a3e-b8fc-14ec8745f846",
            "0edecc97-504e-4394-9b38-71931544bf0c",
            "0607179d-0c94-4765-ab49-b49d7b34babc",
            "227af607-2b63-4b6d-87cf-01a9ce97f5f3",
            "df7b1d3c-1e7d-44f4-a03d-4a35232a812c",
            "b53cf5b4-fc0f-4f75-9220-a47163f60cb8",
            "312d8442-b219-42be-aae2-b6b6e82f748e",
            "f598dd5a-2f11-4552-be55-a98f0615ba01",
            "336cb246-78f9-4cc6-99ef-3f50d83ff577",
            "bde50ce1-7f98-4d71-9a01-b8b997dfb7f0",
            "93c0393d-fcff-4735-bc2a-9422a21df202",
            "634c60ca-71d5-4d0f-a5dc-3b2a63b0e726",
            "5a724bc5-595e-4fd8-8c2b-12f57b7505eb",
            "f1da4a06-f3bf-4582-8c26-5caaa91f81b6",
            "55a8b0ef-e8f8-490e-8281-4286f2bd623e",
            "f9b88181-3b97-4fce-8619-a03ab08db954",
            "de823d00-a5f0-491d-b475-bf2df7475e5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5176,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "97053ccb-ff26-43ea-821c-657ca36fbe7c",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca408089-048e-4fdf-9794-3b25c04d44df",
          "title": "Utilities",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "8183e626-b9dd-412e-b43c-5b1d18c0c0e1",
              "parentUUID": "ca408089-048e-4fdf-9794-3b25c04d44df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active');\ncy.wrap($li).click();\ncy.wrap($li).should('have.class', 'active');",
              "err": {},
              "uuid": "4f9451bf-d746-4842-ac27-24f98eae9dbe",
              "parentUUID": "ca408089-048e-4fdf-9794-3b25c04d44df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 898,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    });\n    // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click();\n    cy.get('.utility-blob img').should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "ffbce347-9749-4592-bb5d-a64dc33051f5",
              "parentUUID": "ca408089-048e-4fdf-9794-3b25c04d44df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false;\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true;\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "bb76a49c-7989-43c5-a16c-d56f1dd505f5",
              "parentUUID": "ca408089-048e-4fdf-9794-3b25c04d44df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true;\n      // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "a77a3752-cb57-4518-92ad-925320f56055",
              "parentUUID": "ca408089-048e-4fdf-9794-3b25c04d44df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8183e626-b9dd-412e-b43c-5b1d18c0c0e1",
            "4f9451bf-d746-4842-ac27-24f98eae9dbe",
            "ffbce347-9749-4592-bb5d-a64dc33051f5",
            "bb76a49c-7989-43c5-a16c-d56f1dd505f5",
            "a77a3752-cb57-4518-92ad-925320f56055"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ab5ebc14-18d5-4fc5-a6f0-a97ea19e358a",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2556d32-183d-45a9-912b-e751efe88a52",
          "title": "Viewport",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3933,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.config.{js|ts})",
              "err": {},
              "uuid": "4030127d-52e3-4822-9345-c428f9635499",
              "parentUUID": "e2556d32-183d-45a9-912b-e751efe88a52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4030127d-52e3-4822-9345-c428f9635499"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1c3b546d-703d-4395-a59c-54d1f9be90be",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1562b714-a637-4526-9dc9-3ff32e3d49ed",
          "title": "Waiting",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 5530,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "6f48a0c1-e57b-4199-bfb6-0f3a85c5380c",
              "parentUUID": "1562b714-a637-4526-9dc9-3ff32e3d49ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 1152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "2e69dfa1-4276-4564-8c90-33c99739de98",
              "parentUUID": "1562b714-a637-4526-9dc9-3ff32e3d49ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f48a0c1-e57b-4199-bfb6-0f3a85c5380c",
            "2e69dfa1-4276-4564-8c90-33c99739de98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9c975776-dec9-47fd-810f-a75dfed559c1",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "03722ab2-fc29-4676-ba6a-ec4cce2861ef",
          "title": "Window",
          "fullFile": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
          "file": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 602,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "0538a455-eb82-4c9b-bbc6-913969eefc2c",
              "parentUUID": "03722ab2-fc29-4676-ba6a-ec4cce2861ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "40b96092-2ee6-4743-8422-07a0b0694dee",
              "parentUUID": "03722ab2-fc29-4676-ba6a-ec4cce2861ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "8bd3c880-1ad7-4c9a-ba01-049a38e7e8e4",
              "parentUUID": "03722ab2-fc29-4676-ba6a-ec4cce2861ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0538a455-eb82-4c9b-bbc6-913969eefc2c",
            "40b96092-2ee6-4743-8422-07a0b0694dee",
            "8bd3c880-1ad7-4c9a-ba01-049a38e7e8e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "10727830-9d6c-41a0-97ab-8fcc48f8e325",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\HRM.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\HRM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d58c9183-26ee-49c4-b309-7f1e1f3c443e",
          "title": "Vist HRM site",
          "fullFile": "cypress\\e2e\\1-getting-started\\HRM.cy.js",
          "file": "cypress\\e2e\\1-getting-started\\HRM.cy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test the entire test case and make proper report",
              "fullTitle": "Vist HRM site Test the entire test case and make proper report",
              "timedOut": null,
              "duration": 8126,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\", {\n  failOnStatusCode: false\n});\ncy.wait(2000);\ncy.get(\"input[placeholder='Username']\").type('Admin', {\n  force: true\n});\ncy.wait(1000);\ncy.get(\"input[placeholder='Password']\").type('admin123', {\n  force: true\n});\ncy.wait(1000);\n// cy.get(\"button[type='submit']\").click({force:true});\n// cy.wait(2000);\n// cy.go('back');\n// cy.get(\"input[placeholder='Username']\").type('Admin',{force:true});\n// cy.get(\"input[placeholder='Password']\").type('admin124',{force:true});\n// cy.get(\"button[type='submit']\").click({force:true});\n// cy.wait(2000);",
              "err": {},
              "uuid": "689575c9-550a-467c-86ad-8c27067b3c6d",
              "parentUUID": "d58c9183-26ee-49c4-b309-7f1e1f3c443e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "689575c9-550a-467c-86ad-8c27067b3c6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8126,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "reportFilename": "mochawesome",
        "overwrite": false,
        "html": false,
        "json": true,
        "saveJson": true
      },
      "version": "6.2.0"
    }
  }
}